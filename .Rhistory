library(spacyr)
spacy_install("nl")
library(spacyr)
spacy_install("nl")
setwd("C:\\Users\\Ruben\\Documents\\05. RCE\\Axiell thesauri")
matches_ow <- fread("thesaurus_onderwerp_matches.csv", encoding = "utf-8")
library(data.table)
matches_ow <- fread("thesaurus_onderwerp_matches.csv", encoding = "utf-8")
matches_ow <- fread("thesaurus_onderwerp_matches.csv", encoding = "UTF-8")
concepts <- cbind(`Term in CSV`, `Other Term in CSV`)
concepts <- cbind(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`)
concepts <- as.data.frame(cbind(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`))
concepts <- as.data.frame(rbind(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`))
concepts <- as.data.frame(paste(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`))
concepts <- paste(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`)
concepts <- cbind(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`)
View(concepts)
concepts <- c(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`)
concepts <- data.frame(c(matches_ow$`Term in CSV`, matches_ow$`Other Term in CSV`))
colnames(concepts)
setnames(concepts, "c.matches_ow..Term.in.CSV...matches_ow..Other.Term.in.CSV..", "concept")
colnames(concepts)
setDT(concepts)
concepts[!duplicated(concept),]
concepts <- concepts[!duplicated(concept),]
View(concepts)
View(matches_ow)
ow_matching <- fread("thesaurus_onderwerp_matchingset.csv")
setDT(ow_matching)
ow_matching[term %in% concepts$concept, matched_concept := TRUE,]
ow_matching[, .N, by = matched_concept]
View(matches_ow)
View(ow_matching)
ow_matching <- ow_matching[, .N, by = matched_concept][order(-N)]
ow_matching <- fread("thesaurus_onderwerp_matchingset.csv")
setDT(ow_matching)
ow_matching[term %in% concepts$concept, matched_concept := TRUE,]
View(ow_matching)
ow_matching[matched_concept = NA, matched_concept := FALSE,]
ow_matching[is.na(matched_concept), matched_concept := FALSE,]
View(ow_matching)
ow_matching <- ow_matching[order(-use_count),]
View(ow_matching)
View(ow_matching)
ow_matching <- fread("thesaurus_onderwerp_matchingset.csv")
setDT(ow_matching)
ow_matching[term %in% concepts$concept, potential_matched_concept := TRUE,]
ow_matching[is.na(matched_concept), potential_matched_concept := FALSE,]
ow_matching <- ow_matching[order(-use_count),]
ow_matching[is.na(potential_matched_concept), potential_matched_concept := FALSE,]
ow_matching <- ow_matching[order(-use_count),]
View(ow_matching)
ow_matching[potential_matched_concept = FALSE, .N]
ow_matching[potential_matched_concept == FALSE, .N]
fwrite(ow_matching, "thesaurus_onderwerp_matchingresult.csv")
ow_matching[potential_matched_concept == FALSE, sum(use_count),]
ow_matching[potential_matched_concept == TRUE, sum(use_count),] # 314095 objects can be potentially enriched
314095 / (314095 + 292582)
