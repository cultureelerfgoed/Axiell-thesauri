library(spacyr)
spacy_install("nl")
library(spacyr)
spacy_install("nl")
# Load required libraries
library(stringdist)
library(dplyr)
library(data.table)
library(foreach)
library(doParallel)
library(progress)
library(textTinyR)
setwd("C:\\Users\\Ruben\\Documents\\05. RCE\\Axiell thesauri\\data")
# load B&AC thesaurus
thesaurus <- fread("Thesarus-export(B&AC).csv", encoding = "UTF-8")
setDT(thesaurus)
zero_use <- thesaurus[use_count == 0, list(term, term.soort)]
dups <- thesaurus[duplicated(thesaurus$term) | duplicated(thesaurus$term, fromLast = TRUE)]
View(dups)
dups <- thesaurus[duplicated(thesaurus$term) & use_count != 0 | duplicated(thesaurus$term, fromLast = TRUE) & use_count != 0]
View(dups)
dups <- thesaurus[duplicated(thesaurus$term) & use_count != 0 | duplicated(thesaurus$term, fromLast = TRUE) & use_count != 0][order(thesaurus$term)]
dups <- thesaurus[duplicated(thesaurus$term) & use_count != 0 | duplicated(thesaurus$term, fromLast = TRUE) & use_count != 0][order(term)]
View(dups)
# flag dups
thesaurus[duplicated(term), dubbel := TRUE,]
thesaurus[, .N, by= dubbel]
# flag dups
thesaurus[duplicated(term)| duplicated(thesaurus$term, fromLast = TRUE), dubbel := TRUE,]
thesaurus[, .N, by= dubbel]
onderwerp <- thesaurus[use_count != 0 & dubbel != TRUE & term.soort == "onderwerp"] # grepl instead
onderwerp <- thesaurus[use_count != 0 & is.na(dubbel) & term.soort == "onderwerp"] # grepl instead
thesaurus[is.na(dubbe), dubbel := FALSE, ]
thesaurus[is.na(dubbel), dubbel := FALSE, ]
onderwerp <- thesaurus[use_count != 0 & dubbel != FALSE & term.soort == "onderwerp"] # grepl instead
onderwerp <- thesaurus[use_count != 0][dubbel != FALSE][term.soort == "onderwerp",] # grepl instead
onderwerp <- thesaurus[use_count != 0][dubbel == FALSE][term.soort == "onderwerp",] # grepl instead
onderwerp <- thesaurus[use_count != 0][dubbel == FALSE][grepl("onderwerp", thesaurus$term.soort)]
onderwerp <- thesaurus[use_count != 0 & dubbel == FALSE & grepl("onderwerp", term.soort),]
plaats <- thesaurus[use_count != 0 & dubbel == FALSE & & grepl("plaats", term.soort),]]
plaats <- thesaurus[use_count != 0 & dubbel == FALSE & grepl("plaats", term.soort),]]
geografisch <- thesaurus[use_count != 0 & dubbel == FALSE & grepl("geografisch", term.soort),]
plaats <- thesaurus[use_count != 0 & dubbel == FALSE & grepl("plaats", term.soort),]
thesaurus[, .N, by= dubbel]
thesaurus[, .N, list(dubbel, use_count)]
thesaurus[, .N, by = c.(dubbel, use_count)]
thesaurus[, .N, list = c.(dubbel, use_count)]
thesaurus[, .N, list = c(dubbel, use_count)]
thesaurus[, .N, by = c(dubbel, use_count)]
thesaurus[, .N, by = .(dubbel, use_count)]
thesaurus[use_count !=0, .N, by = .(dubbel)]
# compounded terms
ow_compounded <- thesaurus[use_count != 0 & dubbel == FALSE & grepl(";", term), ]
# compounded terms
compounded <- thesaurus[use_count != 0 & dubbel == FALSE & grepl(";", term), ]
View(compounded)
fwrite(ow_compounded, "thesaurus_gedeelde_termen.csv")
onderwerp <- thesaurus[use_count != 0 & dubbel == FALSE & grepl("onderwerp", term.soort),]
fwrite(onderwerp, "thesaurus_onderwerp.csv")
fwrite(zero_use, "thesaurus_zero_use.csv")
fwrite(dups, "thesaurus_dubbelingen.csv")
fwrite(ow_matching, "thesaurus_onderwerp_matchingset.csv")
# find similar terms
ow_matching <- onderwerp[!grepl(";", term) & !duplicated(term), ]
terms <- ow_matching$term
fwrite(terms, "thesaurus_onderwerp_matchingset.csv")
# find similar terms
ow_matching <- onderwerp[!grepl(";", term) & !duplicated(term), list(term) ]
fwrite(onderwerp[!grepl(";", term) & !duplicated(term), list(term) ], "thesaurus_onderwerp_matchingset.csv")
View(ow_matching)
ow_matching <- onderwerp, list(term) ]
ow_matching <- onderwerp[, list(term) ]
fwrite(ow_term, "thesaurus_onderwerp_matchingset.csv")
fwrite(ow_matching, "thesaurus_onderwerp_matchingset.csv")
View(ow_matching)
View(compounded)
View(compounded)
overig <- thesaurus[use_count != 0 & dubbel == FALSE & !grepl("onderwerp", term.soort),]
matches_ow <- fread("thesaurus_onderwerp_fuzzymatches.csv", encoding = "UTF-8")
fuzzy_ow <- fread("thesaurus_onderwerp_fuzzymatches.csv", encoding = "UTF-8")
onderwerp[term %in% fuzzy_ow$term_in_csv, .N]
25110 - onderwerp[term %in% fuzzy_ow$term_in_csv, .N]
"%ni%" <- Negate("%in%")
openrefine_ow <- onderwerp[term %ni% fuzzy_ow$term_in_csv,  ]
fwrite(openrefine_ow, "thesaurus_onderwerp_openrefineset.csv")
onderwerp[term %ni% fuzzy_ow$term_in_csv, sum(use_count),  ]
onderwerp[, sum(use_count),  ]
onderwerp[term %ni% fuzzy_ow$term_in_csv, sum(use_count),  ] / onderwerp[, sum(use_count),  ]
openrefine_ow[, sum(use_count)]
thesaurus[, sum(use_count),  ]
openrefine_ow[, sum(use_count)] / thesaurus[, sum(use_count),  ]
openrefine_ow[, sum(use_count)] / thesaurus[grepl("onderwerp", term.soort), sum(use_count),  ] # 33,4 %
